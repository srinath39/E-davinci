{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","users/components/UserItem.js","users/components/UserList.js","users/pages/Users.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ErrorModal","props","onCancel","onClear","header","show","footer","onClick","ModalOverlay","content","in","mountOnEnter","unmountOnExit","timeout","classNames","className","style","headerClass","onSubmit","event","preventDefault","contentClass","children","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortctrl","AbortController","current","push","fetch","signal","response","json","responseData","ok","Error","message","filter","reqCtrl","useEffect","forEach","abortCtrl","abort","clearError","Card","Avatar","src","alt","width","height","UserItem","to","id","process","image","name","photocount","length","UserList","items","map","users","places","Users","loadedUsers","setLoadedUsers","fetchUsers","LoadingSpinner","asOverlay"],"mappings":"qGAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,OA/BZ,mC,gCCAA,oCAkBeC,IAbI,SAAAC,GACjB,OACE,kBAAC,IAAK,CACJC,SAAUD,EAAME,QAChBC,OAAO,qBACPC,OAAQJ,EAAMd,MACdmB,OAAQ,kBAAC,IAAM,CAACC,QAASN,EAAME,SAAS,SAExC,2BAAIF,EAAMd,U,gCCbhB,oDAOMqB,GAPN,MAOqB,SAAAP,GACnB,IAAMQ,EACJ,kBAAC,IAAa,CACVC,GAAIT,EAAMI,KACVM,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,SAEf,yBAAKC,UAAS,gBAAWd,EAAMc,WAAaC,MAAOf,EAAMe,OACvD,4BAAQD,UAAS,wBAAmBd,EAAMgB,cACxC,4BAAKhB,EAAMG,SAEb,0BACEc,SACEjB,EAAMiB,SAAWjB,EAAMiB,SAAW,SAAAC,GAAK,OAAIA,EAAMC,mBAGnD,yBAAKL,UAAS,yBAAoBd,EAAMoB,eACrCpB,EAAMqB,UAET,4BAAQP,UAAS,wBAAmBd,EAAMsB,cACvCtB,EAAMK,WAMf,OAAOkB,IAASC,aAAahB,EAASiB,SAASC,eAAe,iBAYjDC,IATD,SAAA3B,GACZ,OACE,kBAAC,IAAM4B,SAAQ,KACZ5B,EAAMI,MAAQ,kBAAC,IAAQ,CAACE,QAASN,EAAMC,WACxC,kBAACM,EAAiBP,M,yGCzCxB,06MACO,IAAM6B,EAAgB,WAC3B,MAAkCC,oBAAS,GAAM,mBAA1CC,EAAS,KAAEC,EAAY,KAC9B,EAA0BF,qBAAU,mBAA7B5C,EAAK,KAAE+C,EAAQ,KAEhBC,EAAqBC,iBAAO,IAE5BC,EAAcC,sBAAW,uCAC7B,WAAOC,GAAG,6FAIa,OAJXC,EAAM,+BAAG,MAAOC,EAAI,+BAAG,KAAMC,EAAO,+BAAG,GAC3CC,EAAgB,IAAIC,gBAC1BT,EAAmBU,QAAQC,KAAKH,GAAe,SAE7CV,GAAa,GAAM,SACIc,MAAMR,EAAK,CAChCC,SACAC,OACAC,UACAM,OAAQL,EAAcK,SACrB,KAAD,EALY,OAARC,EAAQ,iBAOaA,EAASC,OAAO,KAAD,GAAxB,GAAZC,EAAY,OACbF,EAASG,GAAG,CAAD,sBACR,IAAIC,MAAMF,EAAaG,SAAS,KAAD,GAKnB,OAHpBnB,EAAmBU,QAAQU,QACzB,SAACC,GAAO,OAAKA,IAAYb,KAE3BV,GAAa,GAAO,kBACbkB,GAAY,QAG6B,MAH7B,0BAEnBlB,GAAa,GACbC,EAAS,KAAIoB,SAAW,wBAAwB,+DAGnD,mDA3B4B,GA4B7B,IAWF,OALAG,qBAAU,WACR,OAAO,WACLtB,EAAmBU,QAAQa,SAAQ,SAACC,GAAS,OAAKA,EAAUC,cAE7D,IACI,CAAE5B,YAAW7C,QAAOkD,cAAawB,WARrB,WACjB3B,EAAS,U,qDCxCb,0BAYe4B,IARF,SAAA7D,GACX,OACE,yBAAKc,UAAS,eAAUd,EAAMc,WAAaC,MAAOf,EAAMe,OACrDf,EAAMqB,Y,qLCSEyC,G,MAZA,SAAA9D,GACb,OACE,yBAAKc,UAAS,iBAAYd,EAAMc,WAAaC,MAAOf,EAAMe,OACxD,yBACEgD,IAAK/D,EAAM+D,IACXC,IAAKhE,EAAMgE,IACXjD,MAAO,CAAEkD,MAAOjE,EAAMiE,MAAOC,OAAQlE,EAAMiE,Y,MCJpC,SAASE,EAASnE,GAC/B,OACE,oCACE,wBAAIc,UAAU,aACZ,kBAAC+C,EAAA,EAAI,CAAC/C,UAAW,sBACf,kBAAC,IAAI,CAACsD,GAAE,WAAMpE,EAAMqE,GAAE,YACpB,yBAAKvD,UAAU,oBACb,kBAAC,EAAM,CACLiD,IAAG,UAAKO,iCAA+B,YAAItE,EAAMuE,OACjDP,IAAKhE,EAAMwE,QAGf,yBAAK1D,UAAU,mBACb,4BAAKd,EAAMwE,MACX,4BACGxE,EAAMyE,WAAWC,OAAQ,IACG,IAA5B1E,EAAMyE,WAAWC,OAAe,QAAU,eCjB5C,SAASC,EAAS3E,GAE7B,OAAwB,IAArBA,EAAM4E,MAAMF,OAEH,yBAAK5D,UAAU,UAAS,iBAE5B,oCACA,wBAAIA,UAAU,cACXd,EAAM4E,MAAMC,KAAI,SAAAC,GACf,OAAQ,kBAAC,EAAQ,CAAChG,IAAKgG,EAAMT,GAAIA,GAAIS,EAAMT,GAAIG,KAAMM,EAAMN,KAAMD,MAAOO,EAAMP,MAAOE,WAAYK,EAAMC,c,yCCbvH,06MAmCeC,UA7BD,WACZ,MAAsDnD,cAA9CE,EAAS,EAATA,UAAW7C,EAAK,EAALA,MAAOkD,EAAW,EAAXA,YAAawB,EAAU,EAAVA,WACvC,EAAsC9B,qBAAU,mBAAzCmD,EAAW,KAAEC,EAAc,KAclC,OAZA1B,qBAAU,YACQ,uCAAG,6GAEYpB,EAAY,GAAD,OACjCkC,qCAAiC,WACpC,KAAD,EAFKpB,EAAY,OAGlBgC,EAAehC,EAAa4B,OAAO,uGAEtC,kBAPe,mCAQhBK,KACC,CAAC/C,IAGF,kBAAC,IAAMR,SAAQ,KACb,kBAAC7B,EAAA,EAAU,CAACb,MAAOA,EAAOgB,QAAS0D,IAClC7B,GACC,yBAAKjB,UAAU,UACb,kBAACsE,EAAA,EAAc,CAACC,WAAS,MAG3BtD,GAAakD,GAAe,kBAAC,EAAS,CAACL,MAAOK","file":"static/js/6.c9bd5bf3.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n    </CSSTransition>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <ModalOverlay {...props} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      const httpAbortctrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortctrl);\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortctrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortctrl\r\n        );\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        setError(err.message || \"something went wrong\");\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './Avatar.css';\r\n\r\nconst Avatar = props => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.src}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport \"./UserItem.css\";\r\n\r\nexport default function UserItem(props) {\r\n  return (\r\n    <>\r\n      <li className=\"user-item\">\r\n        <Card className={\"user-item__content\"}>\r\n          <Link to={`/${props.id}/places`}>\r\n            <div className=\"user-item__image\">\r\n              <Avatar\r\n                src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n                alt={props.name}\r\n              />\r\n            </div>\r\n            <div className=\"user-item__info\">\r\n              <h2>{props.name}</h2>\r\n              <h3>\r\n                {props.photocount.length}{\" \"}\r\n                {props.photocount.length === 1 ? \"place\" : \"places\"}\r\n              </h3>\r\n            </div>\r\n          </Link>\r\n        </Card>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport './UserList.css';\r\nimport UserItem from './UserItem';\r\n\r\nexport default function UserList(props)\r\n{\r\n    if(props.items.length===0)\r\n    {\r\n        return (<div className='center'>No user Found</div>);\r\n    }\r\n    return (<>\r\n            <ul className='users-list'>\r\n              {props.items.map(users=>{\r\n                return (<UserItem key={users.id} id={users.id} name={users.name} image={users.image} photocount={users.places} />);\r\n              })}\r\n            </ul>\r\n    </>)\r\n}","import React, { useEffect, useState } from \"react\";\r\n\r\nimport UsersList from \"../components/UserList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users`\r\n        );\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}