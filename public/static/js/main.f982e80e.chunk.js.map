{"version":3,"sources":["shared/context/auth-context.js","shared/components/FormElements/Button.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","token","userId","login","logout","Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","MainHeader","NavLinks","auth","useContext","isLoggedIn","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","reset","MainNavigation","useState","bool","setBool","logoutTimer","App","routes","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","setToken","setUserId","expirationTimeDate","setExpirationTimeDate","useCallback","uid","expirationTime","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storage","parse","getItem","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.f982e80e.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  token: null,\r\n  userId: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\r\nimport './MainHeader.css';\r\n\r\nexport default function MainHeader(props)\r\n{\r\n    return (<><header className='main-header'>{props.children}</header></>);\r\n}","import React,{useContext} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport Button from '../FormElements/Button';\r\nimport './NavLinks.css';\r\nexport default function NavLinks()\r\n{\r\n    const auth=useContext(AuthContext);\r\n    \r\n    return (<>\r\n    <ul className='nav-links'>\r\n        <li>\r\n            <NavLink to=\"/\" exact>ALL USERS</NavLink>\r\n        </li>\r\n        {auth.isLoggedIn && <li>\r\n            <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>}\r\n        {auth.isLoggedIn && <li>\r\n            <NavLink to=\"/place/new\">ADD PLACE</NavLink>\r\n        </li>}\r\n        {!auth.isLoggedIn &&<li>\r\n            <NavLink to=\"/auth\">Authentication</NavLink>\r\n        </li>}\r\n        {auth.isLoggedIn && <li>\r\n            <Button onClick={auth.logout}>LOGOUT</Button>\r\n        </li>}\r\n    </ul>\r\n    </>);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './SideDrawer.css';\r\n\r\n\r\nexport default function SideDrawer(props)\r\n{\r\n    const content= <CSSTransition in={props.show} timeout={200} classNames=\"slide-in-left\" mountOnEnter unmountOnExit>\r\n        <aside className='side-drawer' onClick={props.reset}>{props.children}</aside>\r\n    </CSSTransition>;\r\n    return ReactDOM.createPortal(content,document.getElementById('drawer-hook'));\r\n};","import React from \"react\";\r\nimport MainHeader from './MainHeader';\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElements/Backdrop';\r\nimport {Link} from 'react-router-dom';\r\nimport { useState } from \"react\";\r\nimport './MainNavigation.css';\r\n\r\nexport default function MainNavigation()\r\n{\r\n    const [bool,setBool]=useState(false);\r\n    return (\r\n        <>   \r\n        {bool && <Backdrop onClick={()=>{setBool(false)}}/>}\r\n        <SideDrawer show={bool} reset={()=>setBool(false)}>\r\n            <nav className=\"main-navigation__drawer-nav\">\r\n                <NavLinks/>\r\n            </nav>\r\n        </SideDrawer>\r\n        <MainHeader>\r\n            <button className=\"main-navigation__menu-btn\" onClick={()=>{setBool(true)}}>\r\n            <span />\r\n            <span />\r\n            <span />\r\n            </button>\r\n            <h1 className=\"main-navigation__title\">\r\n                <Link to=\"/\">E-davinci</Link>\r\n            </h1>\r\n            <nav className=\"main-navigation__header-nav\">\r\n                <NavLinks/>\r\n            </nav>\r\n        </MainHeader>\r\n        </>\r\n        );\r\n};","import React, { useState, useCallback, useEffect, Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\n// import Users from \"./users/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./users/pages/Auth\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n\nlet logoutTimer;\n\nconst App = () => {\n  const Users = React.lazy(() => import(\"./users/pages/Users\"));\n  const NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\n  const UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\n  const UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\n  const Auth = React.lazy(() => import(\"./users/pages/Auth\"));\n\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [expirationTimeDate, setExpirationTimeDate] = useState(null);\n\n  const login = useCallback((uid, token, expirationTime) => {\n    setToken(token);\n    setUserId(uid);\n    const expirationTimeDate =\n      expirationTime || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setExpirationTimeDate(expirationTimeDate);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: expirationTimeDate.toISOString(), // converts the date to string later convert back to date by passing the string to new Date() as a constructor\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setExpirationTimeDate(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  useEffect(() => {\n    if (token && expirationTimeDate) {\n      const remainingTime =\n        new Date(expirationTimeDate).getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, expirationTimeDate]);\n\n  useEffect(() => {\n    let storage = JSON.parse(localStorage.getItem(\"userData\"));\n    if (storage && storage.token) {\n      if (new Date(storage.expiration) > new Date()) {\n        login(storage.userId, storage.token, new Date(storage.expiration));\n      }\n    }\n  }, [login, logout]);\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/place/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/place/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}